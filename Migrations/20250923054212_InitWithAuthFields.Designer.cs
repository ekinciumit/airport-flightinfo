// <auto-generated />
using System;
using FlightInfo.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlightInfo.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250923054212_InitWithAuthFields")]
    partial class InitWithAuthFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FlightInfo.Api.Domain.Flight", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<DateTime>("ArrivalTime")
                    .HasColumnType("datetime2");

                b.Property<DateTime>("DepartureTime")
                    .HasColumnType("datetime2");

                b.Property<string>("Destination")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("FlightNumber")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Origin")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Status")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("Flights");
            });

            modelBuilder.Entity("FlightInfo.Api.Domain.User", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<string>("Email")
                    .IsRequired()
                    .HasColumnType("nvarchar(450)");

                b.Property<string>("FullName")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("bit");

                b.Property<byte[]>("PasswordHash")
                    .IsRequired()
                    .HasColumnType("varbinary(max)");

                b.Property<byte[]>("PasswordSalt")
                    .IsRequired()
                    .HasColumnType("varbinary(max)");

                b.Property<int>("Role")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("Email")
                    .IsUnique();

                b.ToTable("Users");
            });

            modelBuilder.Entity("Log", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<string>("Action")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<int?>("FlightId")
                    .HasColumnType("int");

                b.Property<DateTime>("Timestamp")
                    .HasColumnType("datetime2");

                b.Property<int?>("UserId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("FlightId");

                b.HasIndex("UserId");

                b.ToTable("Logs");
            });

            modelBuilder.Entity("Log", b =>
            {
                b.HasOne("FlightInfo.Api.Domain.Flight", "Flight")
                    .WithMany()
                    .HasForeignKey("FlightId")
                    .OnDelete(DeleteBehavior.SetNull);

                b.HasOne("FlightInfo.Api.Domain.User", "User")
                    .WithMany()
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.SetNull);

                b.Navigation("Flight");

                b.Navigation("User");
            });
#pragma warning restore 612, 618
        }
    }
}